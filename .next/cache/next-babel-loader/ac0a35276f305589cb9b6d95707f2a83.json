{"ast":null,"code":"var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _class, _descriptor, _descriptor2, _descriptor3, _temp, _dec7, _dec8, _dec9, _dec10, _dec11, _dec12, _dec13, _dec14, _dec15, _dec16, _dec17, _dec18, _dec19, _dec20, _class3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _temp2;\n\nfunction _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\nfunction _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }\n\nimport { connect } from \"mongoose\";\nimport { prop, getModelForClass } from \"@typegoose/typegoose\";\nexport function initializeMongoose() {\n  const connectionString = process.env.MONGO_CONNECTION_STRING || \"\";\n\n  if (connectionString === \"\") {\n    throw Error(\"No Mongo Connection String supplied.\");\n  }\n\n  connect(connectionString, {\n    useNewUrlParser: true,\n    useUnifiedTopology: true\n  });\n}\nexport class CoreDocument {\n  constructor() {\n    this._id = void 0;\n  }\n\n}\nexport let Channel = (_dec = prop(), _dec2 = Reflect.metadata(\"design:type\", String), _dec3 = prop(), _dec4 = Reflect.metadata(\"design:type\", String), _dec5 = prop(), _dec6 = Reflect.metadata(\"design:type\", String), (_class = (_temp = class Channel extends CoreDocument {\n  constructor(...args) {\n    super(...args);\n\n    _initializerDefineProperty(this, \"name\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"channelID\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"lastMessage\", _descriptor3, this);\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"name\", [_dec, _dec2], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"channelID\", [_dec3, _dec4], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"lastMessage\", [_dec5, _dec6], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class));\nexport const ChannelModel = getModelForClass(Channel);\nexport let Post = (_dec7 = prop(), _dec8 = Reflect.metadata(\"design:type\", String), _dec9 = prop(), _dec10 = Reflect.metadata(\"design:type\", String), _dec11 = prop(), _dec12 = Reflect.metadata(\"design:type\", String), _dec13 = prop(), _dec14 = Reflect.metadata(\"design:type\", String), _dec15 = prop(), _dec16 = Reflect.metadata(\"design:type\", Number), _dec17 = prop(), _dec18 = Reflect.metadata(\"design:type\", Number), _dec19 = prop(), _dec20 = Reflect.metadata(\"design:type\", Number), (_class3 = (_temp2 = class Post extends CoreDocument {\n  constructor(...args) {\n    super(...args);\n\n    _initializerDefineProperty(this, \"channelID\", _descriptor4, this);\n\n    _initializerDefineProperty(this, \"content\", _descriptor5, this);\n\n    _initializerDefineProperty(this, \"postID\", _descriptor6, this);\n\n    _initializerDefineProperty(this, \"authorID\", _descriptor7, this);\n\n    _initializerDefineProperty(this, \"createdTimestamp\", _descriptor8, this);\n\n    _initializerDefineProperty(this, \"editedTimestamp\", _descriptor9, this);\n\n    _initializerDefineProperty(this, \"wordCount\", _descriptor10, this);\n  }\n\n}, _temp2), (_descriptor4 = _applyDecoratedDescriptor(_class3.prototype, \"channelID\", [_dec7, _dec8], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor5 = _applyDecoratedDescriptor(_class3.prototype, \"content\", [_dec9, _dec10], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor6 = _applyDecoratedDescriptor(_class3.prototype, \"postID\", [_dec11, _dec12], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor7 = _applyDecoratedDescriptor(_class3.prototype, \"authorID\", [_dec13, _dec14], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor8 = _applyDecoratedDescriptor(_class3.prototype, \"createdTimestamp\", [_dec15, _dec16], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor9 = _applyDecoratedDescriptor(_class3.prototype, \"editedTimestamp\", [_dec17, _dec18], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor10 = _applyDecoratedDescriptor(_class3.prototype, \"wordCount\", [_dec19, _dec20], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class3));\nexport const PostModel = getModelForClass(Post);","map":{"version":3,"sources":["/home/laura/dev/ozone/src/server/mongoose.ts"],"names":["connect","prop","getModelForClass","initializeMongoose","connectionString","process","env","MONGO_CONNECTION_STRING","Error","useNewUrlParser","useUnifiedTopology","CoreDocument","_id","Channel","ChannelModel","Post","PostModel"],"mappings":";;;;;;;;AAEA,SAASA,OAAT,QAAwB,UAAxB;AACA,SAASC,IAAT,EAAeC,gBAAf,QAAuC,sBAAvC;AAEA,OAAO,SAASC,kBAAT,GAA8B;AACnC,QAAMC,gBAAgB,GAAGC,OAAO,CAACC,GAAR,CAAYC,uBAAZ,IAAuC,EAAhE;;AACA,MAAIH,gBAAgB,KAAK,EAAzB,EAA6B;AAC3B,UAAMI,KAAK,CAAC,sCAAD,CAAX;AACD;;AAEDR,EAAAA,OAAO,CACLI,gBADK,EAEL;AAACK,IAAAA,eAAe,EAAE,IAAlB;AAAwBC,IAAAA,kBAAkB,EAAE;AAA5C,GAFK,CAAP;AAID;AAED,OAAO,MAAMC,YAAN,CAAmB;AAAA;AAAA,SACxBC,GADwB;AAAA;;AAAA;AAI1B,WAAaC,OAAb,WACGZ,IAAI,EADP,2DAIGA,IAAI,EAJP,2DAOGA,IAAI,EAPP,sEAAO,MAAMY,OAAN,SAAsBF,YAAtB,CAAmC;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA,OAAO,MAAMG,YAAY,GAAGZ,gBAAgB,CAACW,OAAD,CAArC;AAEP,WAAaE,IAAb,YACGd,IAAI,EADP,2DAIGA,IAAI,EAJP,6DAOGA,IAAI,EAPP,6DAUGA,IAAI,EAVP,6DAaGA,IAAI,EAbP,6DAgBGA,IAAI,EAhBP,6DAmBGA,IAAI,EAnBP,yEAAO,MAAMc,IAAN,SAAmBJ,YAAnB,CAAgC;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuBA,OAAO,MAAMK,SAAS,GAAGd,gBAAgB,CAACa,IAAD,CAAlC","sourcesContent":["\n\nimport { connect } from \"mongoose\";\nimport { prop, getModelForClass } from \"@typegoose/typegoose\";\n\nexport function initializeMongoose() {\n  const connectionString = process.env.MONGO_CONNECTION_STRING || \"\";\n  if (connectionString === \"\") {\n    throw Error(\"No Mongo Connection String supplied.\");\n  }\n\n  connect(\n    connectionString, \n    {useNewUrlParser: true, useUnifiedTopology: true}\n  );\n}\n\nexport class CoreDocument {\n  _id?: string;\n}\n\nexport class Channel extends CoreDocument {\n  @prop()\n  name!: string;\n\n  @prop()\n  channelID!: string;\n\n  @prop()\n  lastMessage!: string;\n}\nexport const ChannelModel = getModelForClass(Channel);\n\nexport class Post extends CoreDocument {\n  @prop()\n  channelID!: string;\n\n  @prop()\n  content!: string;\n\n  @prop()\n  postID!: string;\n\n  @prop()\n  authorID!: string;\n\n  @prop()\n  createdTimestamp: number;\n\n  @prop()\n  editedTimestamp: number;\n\n  @prop()\n  wordCount: number;\n}\n\nexport const PostModel = getModelForClass(Post);"]},"metadata":{},"sourceType":"module"}